{"ast":null,"code":"var _jsxFileName = \"/home/laura/Documents/react-app-course/react-app/post-react-app/src/components/PostItem.js\";\nimport React, { Component } from 'react';\nimport { Accordion, Icon, Header, Card, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport './PostItem.css';\nimport { runInThisContext } from 'vm';\nexport default class PostItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeIndex: 1\n    };\n\n    this.handleClick = (e, titleProps) => {\n      const index = titleProps.index;\n      const activeIndex = this.state.activeIndex;\n      const newIndex = activeIndex === index ? -1 : index;\n      this.setState({\n        activeIndex: newIndex\n      });\n    };\n  }\n\n  renderAdmin(post) {\n    if (this.props.user && this.props.user.userId === post.userId) {\n      return React.createElement(\"div\", {\n        className: \"right floated content align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"ui button primary fixed-size\",\n        to: \"posts/edit/\".concat(post._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Link, {\n        className: \"ui button negative fixed-size\",\n        to: \"posts/delete/\".concat(post._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  render() {\n    const activeIndex = this.state.activeIndex;\n    return React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Accordion.Title, {\n      active: activeIndex === 0,\n      index: 0,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), this.props.post.postTitle)), React.createElement(Accordion.Content, {\n      className: \"post-content\",\n      active: activeIndex === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"post-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: this.props.post.imagePath,\n      wrapped: true,\n      ui: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.post.postTitle), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.post.postContent))), this.renderAdmin(this.props.post)));\n  }\n\n}","map":{"version":3,"sources":["/home/laura/Documents/react-app-course/react-app/post-react-app/src/components/PostItem.js"],"names":["React","Component","Accordion","Icon","Header","Card","Image","Link","runInThisContext","PostItem","state","activeIndex","handleClick","e","titleProps","index","newIndex","setState","renderAdmin","post","props","user","userId","_id","render","postTitle","imagePath","postContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Accordion, Icon, Header, Card, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport './PostItem.css';\nimport { runInThisContext } from 'vm';\n\nexport default class PostItem extends Component {\n    state = { activeIndex: 1 }\n\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    renderAdmin(post) {\n        if (this.props.user && this.props.user.userId === post.userId) {\n            return (\n                <div className=\"right floated content align-center\">\n                    <Link className=\"ui button primary fixed-size\" to={`posts/edit/${post._id}`}>Edit</Link>\n                    <Link className=\"ui button negative fixed-size\" to={`posts/delete/${post._id}`}>Delete</Link>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        const { activeIndex } = this.state\n        return (\n            <Accordion>\n                <Accordion.Title\n                    active={activeIndex === 0}\n                    index={0}\n                    onClick={this.handleClick}\n                >\n                    <Header as='h3'>\n                        <Icon name='dropdown' />\n                        {this.props.post.postTitle}\n                    </Header>\n\n                </Accordion.Title>\n                <Accordion.Content className=\"post-content\" active={activeIndex === 0}>\n                    <Card className=\"post-card\">\n                        <Image src={this.props.post.imagePath} wrapped ui={false} />\n                        <Card.Content>\n                            <Card.Header>{this.props.post.postTitle}</Card.Header>\n                            <Card.Description>\n                                {this.props.post.postContent}\n                            </Card.Description>\n                        </Card.Content>\n                    </Card>\n                    {this.renderAdmin(this.props.post)}\n                </Accordion.Content>\n            </Accordion >\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}