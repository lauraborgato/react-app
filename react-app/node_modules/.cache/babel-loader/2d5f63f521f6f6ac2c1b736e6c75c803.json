{"ast":null,"code":"import _defineProperty from \"/home/laura/Documents/react-app-course/react-app/post-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport FormData from 'form-data';\nimport backendApi from '../apis/backendApi';\nimport { LOGIN, SIGNIN, FETCH_POSTS, LOGOUT, ADD_POST } from './actionTypes';\nimport history from '../history';\nexport const fetchPosts = () => async dispatch => {\n  const response = await backendApi.get('/posts');\n  dispatch({\n    type: FETCH_POSTS,\n    payload: response.data.posts\n  });\n};\nexport const createPost = formValues => async (dispatch, getState) => {\n  const postData = new FormData();\n  postData.append('postTitle', formValues.postTitle);\n  postData.append('postContent', formValues.postContent);\n  postData.append('postImage', formValues.postImage, formValues.postTitle);\n  console.log(formValues);\n  const response = await fetch('http://localhost:3000/api/posts', {\n    method: 'POST',\n    body: postData,\n    headers: {\n      'Authorization': \"Bearer \".concat(getState().user.token)\n    }\n  });\n  console.log(response);\n  dispatch({\n    type: ADD_POST,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const loginUser = formValues => async dispatch => {\n  console.log(formValues);\n  const now = new Date();\n  const response = await backendApi.post(\"/user/login\", _objectSpread({}, formValues));\n  const authData = {\n    token: response.data.token,\n    expirationDate: new Date(now.getTime() + response.data.expiresIn * 1000),\n    userId: response.data.userId\n  };\n  dispatch({\n    type: LOGIN,\n    payload: authData\n  });\n  history.push('/');\n};\nexport const logOut = () => {\n  return {\n    type: LOGOUT\n  };\n};\nexport const singUp = (email, password) => async dispatch => {\n  const response = await backendApi.post('user/singup', {\n    email,\n    password\n  });\n  dispatch({\n    type: SIGNIN,\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/home/laura/Documents/react-app-course/react-app/post-react-app/src/actions/index.js"],"names":["FormData","backendApi","LOGIN","SIGNIN","FETCH_POSTS","LOGOUT","ADD_POST","history","fetchPosts","dispatch","response","get","type","payload","data","posts","createPost","formValues","getState","postData","append","postTitle","postContent","postImage","console","log","fetch","method","body","headers","user","token","push","loginUser","now","Date","post","authData","expirationDate","getTime","expiresIn","userId","logOut","singUp","email","password"],"mappings":"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","sourcesContent":["import FormData from 'form-data'; \nimport backendApi from '../apis/backendApi';\nimport { LOGIN, SIGNIN, FETCH_POSTS, LOGOUT, ADD_POST } from './actionTypes';\nimport history from '../history';\n\nexport const fetchPosts = () => async dispatch => {\n\n    const response = await backendApi.get('/posts');\n    dispatch({ type: FETCH_POSTS, payload: response.data.posts })\n};\n\nexport const createPost = (formValues) => async (dispatch, getState) => {\n    const postData = new FormData();\n    postData.append('postTitle', formValues.postTitle);\n    postData.append('postContent', formValues.postContent);\n    postData.append('postImage', formValues.postImage, formValues.postTitle);\n    console.log(formValues);\n    const response = await fetch('http://localhost:3000/api/posts', {\n        method: 'POST',\n        body: postData,\n        headers: {\n            'Authorization': `Bearer ${getState().user.token}`\n        }\n\n    });\n    console.log(response);\n    dispatch({ type: ADD_POST, payload: response.data });\n\n    history.push('/');\n\n}\n\nexport const loginUser = formValues => async dispatch => {\n    console.log(formValues);\n    const now = new Date();\n    const response = await backendApi.post(`/user/login`, { ...formValues });\n    const authData = {\n        token: response.data.token,\n        expirationDate: new Date(now.getTime() + response.data.expiresIn * 1000),\n        userId: response.data.userId\n    }\n    dispatch({ type: LOGIN, payload: authData });\n\n    history.push('/');\n};\n\nexport const logOut = () => {\n    return { type: LOGOUT };\n}\n\nexport const singUp = (email, password) => async dispatch => {\n    const response = await backendApi.post('user/singup', {\n        email,\n        password\n    });\n    dispatch({ type: SIGNIN, payload: response.data });\n}"]},"metadata":{},"sourceType":"module"}