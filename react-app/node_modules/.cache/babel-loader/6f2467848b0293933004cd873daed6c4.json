{"ast":null,"code":"var _jsxFileName = \"/home/laura/Documents/brr-27-capacitacion-reactjs/react-app/src/components/posts/DeletePost.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../../Modal';\nimport history from '../../history';\nimport { fetchPosts, deletePost } from '../../actions/index';\n\nclass PostDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchPosts(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return (//fragment is like a div it is not rendered in screen\n      // yo can use <></> as well (quality checkers view this as incorrect)\n      React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button negative\",\n        onClick: () => this.props.deletePost(this.props.match.params.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Link, {\n        className: \"ui button\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Cancel\"))\n    );\n  }\n\n  renderContent() {\n    if (!this.props.post) {\n      return 'Are you sure you want to delete this Post?';\n    } else {\n      return \"Are you sure you want to delete this Post with title: '\".concat(this.props.post.postTitle, \"'?\");\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(Modal, {\n      title: \"Delete Post\",\n      onDismiss: () => {\n        history.push('/');\n      },\n      action: this.renderActions(),\n      content: this.renderContent(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    post: state.posts[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts,\n  deletePost\n})(PostDelete);","map":{"version":3,"sources":["/home/laura/Documents/brr-27-capacitacion-reactjs/react-app/src/components/posts/DeletePost.js"],"names":["React","connect","Link","Modal","history","fetchPosts","deletePost","PostDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","post","postTitle","render","console","log","push","mapStateToProps","state","ownProps","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,qBAAvC;;AAEA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C;AACH;;AACDC,EAAAA,aAAa,GAAG;AACZ,WACI;AACA;AACA,0BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,OAAO,EAAE,MAAM,KAAKJ,KAAL,CAAWJ,UAAX,CAAsB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAHJ;AAUH;;AACDE,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAKL,KAAL,CAAWM,IAAhB,EAAsB;AAClB,aAAO,4CAAP;AACH,KAFD,MAEO;AACH,8EAAiE,KAAKN,KAAL,CAAWM,IAAX,CAAgBC,SAAjF;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,WACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,aADV;AAEI,MAAA,SAAS,EAAE,MAAM;AAAEN,QAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AAAmB,OAF1C;AAGI,MAAA,MAAM,EAAE,KAAKP,aAAL,EAHZ;AAII,MAAA,OAAO,EAAE,KAAKC,aAAL,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH;;AAlCoC;;AAsCzC,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAER,IAAAA,IAAI,EAAEO,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACb,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AAAR,GAAP;AACH,CAFD;;AAGA,eAAeZ,OAAO,CAACqB,eAAD,EAAkB;AAAEjB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAqDC,UAArD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../../Modal';\nimport history from '../../history';\nimport { fetchPosts, deletePost } from '../../actions/index';\n\nclass PostDelete extends React.Component {\n    componentDidMount() {\n        this.props.fetchPosts(this.props.match.params.id);\n    }\n    renderActions() {\n        return (\n            //fragment is like a div it is not rendered in screen\n            // yo can use <></> as well (quality checkers view this as incorrect)\n            <React.Fragment>\n                <button className=\"ui button negative\" onClick={() => this.props.deletePost(this.props.match.params.id)}>\n                    Delete\n                </button>\n                <Link className=\"ui button\" to='/'>Cancel</Link>\n            </React.Fragment>\n        );\n    }\n    renderContent() {\n        if (!this.props.post) {\n            return 'Are you sure you want to delete this Post?'\n        } else {\n            return `Are you sure you want to delete this Post with title: '${this.props.post.postTitle}'?`\n        }\n    }\n    render() {\n        console.log(this.props);\n        return (\n            <Modal\n                title=\"Delete Post\"\n                onDismiss={() => { history.push('/') }}\n                action={this.renderActions()}\n                content={this.renderContent()}>\n            </Modal>\n\n        );\n    }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { post: state.posts[ownProps.match.params.id] };\n}\nexport default connect(mapStateToProps, { fetchPosts, deletePost })(PostDelete);"]},"metadata":{},"sourceType":"module"}