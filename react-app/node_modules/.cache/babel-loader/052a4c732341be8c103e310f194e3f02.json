{"ast":null,"code":"import _defineProperty from \"/home/laura/Documents/react-app-course/react-app/post-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport backendApi from '../apis/backendApi';\nimport { LOGIN, SIGNIN, FETCH_POSTS, LOGOUT, ADD_POST } from './actionTypes';\nimport history from '../history';\nexport const fetchPosts = () => async dispatch => {\n  const response = await backendApi.get('/posts');\n  dispatch({\n    type: FETCH_POSTS,\n    payload: response.data.posts\n  });\n};\nexport const createPost = formValues => async (dispatch, getState) => {\n  console.log(getState().user.userId);\n  const response = await backendApi.post('/posts', _objectSpread({\n    headers: {\n      'Authorization': \"Bearer \".concat(getState().user.token)\n    }\n  }, formValues));\n  dispatch({\n    type: ADD_POST,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const loginUser = formValues => async dispatch => {\n  console.log(formValues);\n  const now = new Date();\n  const response = await backendApi.post(\"/user/login\", _objectSpread({}, formValues));\n  const authData = {\n    token: response.data.token,\n    expirationDate: new Date(now.getTime() + response.data.expiresIn * 1000),\n    userId: response.data.userId\n  };\n  dispatch({\n    type: LOGIN,\n    payload: authData\n  });\n  history.push('/');\n};\nexport const logOut = () => {\n  return {\n    type: LOGOUT\n  };\n};\nexport const singUp = (email, password) => async dispatch => {\n  const response = await backendApi.post('user/singup', {\n    email,\n    password\n  });\n  dispatch({\n    type: SIGNIN,\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/home/laura/Documents/react-app-course/react-app/post-react-app/src/actions/index.js"],"names":["backendApi","LOGIN","SIGNIN","FETCH_POSTS","LOGOUT","ADD_POST","history","fetchPosts","dispatch","response","get","type","payload","data","posts","createPost","formValues","getState","console","log","user","userId","post","headers","token","push","loginUser","now","Date","authData","expirationDate","getTime","expiresIn","logOut","singUp","email","password"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,oBAAvB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,eAA7D;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAE9C,QAAMC,QAAQ,GAAG,MAAMT,UAAU,CAACU,GAAX,CAAe,QAAf,CAAvB;AACAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER,WAAR;AAAqBS,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAA5C,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMC,UAAU,GAAIC,UAAD,IAAgB,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AACpEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,GAAGG,IAAX,CAAgBC,MAA5B;AACA,QAAMZ,QAAQ,GAAG,MAAMT,UAAU,CAACsB,IAAX,CAAgB,QAAhB;AACnBC,IAAAA,OAAO,EAAE;AACL,wCAA2BN,QAAQ,GAAGG,IAAX,CAAgBI,KAA3C;AADK;AADU,KAIhBR,UAJgB,EAAvB;AAOAR,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEN,QAAR;AAAkBO,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAApC,GAAD,CAAR;AAEAP,EAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AAEH,CAbM;AAeP,OAAO,MAAMC,SAAS,GAAGV,UAAU,IAAI,MAAMR,QAAN,IAAkB;AACrDU,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,QAAMW,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAMnB,QAAQ,GAAG,MAAMT,UAAU,CAACsB,IAAX,kCAAoCN,UAApC,EAAvB;AACA,QAAMa,QAAQ,GAAG;AACbL,IAAAA,KAAK,EAAEf,QAAQ,CAACI,IAAT,CAAcW,KADR;AAEbM,IAAAA,cAAc,EAAE,IAAIF,IAAJ,CAASD,GAAG,CAACI,OAAJ,KAAgBtB,QAAQ,CAACI,IAAT,CAAcmB,SAAd,GAA0B,IAAnD,CAFH;AAGbX,IAAAA,MAAM,EAAEZ,QAAQ,CAACI,IAAT,CAAcQ;AAHT,GAAjB;AAKAb,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEV,KAAR;AAAeW,IAAAA,OAAO,EAAEiB;AAAxB,GAAD,CAAR;AAEAvB,EAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AACH,CAZM;AAcP,OAAO,MAAMQ,MAAM,GAAG,MAAM;AACxB,SAAO;AAAEtB,IAAAA,IAAI,EAAEP;AAAR,GAAP;AACH,CAFM;AAIP,OAAO,MAAM8B,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAM5B,QAAN,IAAkB;AACzD,QAAMC,QAAQ,GAAG,MAAMT,UAAU,CAACsB,IAAX,CAAgB,aAAhB,EAA+B;AAClDa,IAAAA,KADkD;AAElDC,IAAAA;AAFkD,GAA/B,CAAvB;AAIA5B,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAET,MAAR;AAAgBU,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAlC,GAAD,CAAR;AACH,CANM","sourcesContent":["import backendApi from '../apis/backendApi';\nimport { LOGIN, SIGNIN, FETCH_POSTS, LOGOUT, ADD_POST } from './actionTypes';\nimport history from '../history';\n\nexport const fetchPosts = () => async dispatch => {\n\n    const response = await backendApi.get('/posts');\n    dispatch({ type: FETCH_POSTS, payload: response.data.posts })\n};\n\nexport const createPost = (formValues) => async (dispatch, getState) => {\n    console.log(getState().user.userId);\n    const response = await backendApi.post('/posts', {\n        headers: {\n            'Authorization': `Bearer ${getState().user.token}`\n        },\n        ...formValues\n    });\n\n    dispatch({ type: ADD_POST, payload: response.data });\n\n    history.push('/');\n\n}\n\nexport const loginUser = formValues => async dispatch => {\n    console.log(formValues);\n    const now = new Date();\n    const response = await backendApi.post(`/user/login`, { ...formValues });\n    const authData = {\n        token: response.data.token,\n        expirationDate: new Date(now.getTime() + response.data.expiresIn * 1000),\n        userId: response.data.userId\n    }\n    dispatch({ type: LOGIN, payload: authData });\n\n    history.push('/');\n};\n\nexport const logOut = () => {\n    return { type: LOGOUT };\n}\n\nexport const singUp = (email, password) => async dispatch => {\n    const response = await backendApi.post('user/singup', {\n        email,\n        password\n    });\n    dispatch({ type: SIGNIN, payload: response.data });\n}"]},"metadata":{},"sourceType":"module"}