{"ast":null,"code":"import _objectWithoutProperties from \"/home/laura/Documents/react-app-course/react-app/post-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/laura/Documents/react-app-course/react-app/post-react-app/src/components/postForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass PostForm extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.adaptFileEventToValue = delegate => e => {\n      console.log(e.target.files);\n      this.setState({\n        file: URL.createObjectURL(e.target.files[0])\n      });\n      delegate(e.target.files[0]);\n    };\n\n    this.FileInput = (_ref) => {\n      let _ref$input = _ref.input,\n          omitValue = _ref$input.value,\n          onChange = _ref$input.onChange,\n          onBlur = _ref$input.onBlur,\n          omitMeta = _ref.meta,\n          props = _objectWithoutProperties(_ref, [\"input\", \"meta\"]);\n\n      return React.createElement(\"input\", Object.assign({\n        onChange: this.adaptFileEventToValue(onChange),\n        onBlur: this.adaptFileEventToValue(onBlur),\n        type: \"file\"\n      }, props.input, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta,\n      type\n    }) => {\n      const className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, label, React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), this.renderError(meta)));\n    };\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n\n    this.state = {\n      file: null\n    }; // this.handleChange = this.handleChange.bind(this)\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        className: \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, error));\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"attachment\",\n      component: this.FileInput,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.state.file,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.constent) {\n    errors.constent = 'You must enter a constent';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'postForm',\n  validate\n})(PostForm);","map":{"version":3,"sources":["/home/laura/Documents/react-app-course/react-app/post-react-app/src/components/postForm.js"],"names":["React","Field","reduxForm","PostForm","Component","constructor","props","adaptFileEventToValue","delegate","e","console","log","target","files","setState","file","URL","createObjectURL","FileInput","input","omitValue","value","onChange","onBlur","omitMeta","meta","renderInput","label","type","className","error","touched","renderError","onSubmit","formValues","state","render","handleSubmit","validate","errors","title","constent","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass PostForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: null\n        }\n        // this.handleChange = this.handleChange.bind(this)\n    }\n\n    adaptFileEventToValue = delegate => e => {\n        console.log(e.target.files);\n        this.setState({\n            file: URL.createObjectURL(e.target.files[0])\n        }); \n        delegate(e.target.files[0]);\n    };\n\n    FileInput = ({\n        input: { value: omitValue, onChange, onBlur },\n        meta: omitMeta,\n        ...props\n    }) => {\n        return (\n            <input\n                onChange={this.adaptFileEventToValue(onChange)}\n                onBlur={this.adaptFileEventToValue(onBlur)}\n                type=\"file\"\n                {...props.input}\n                {...props}\n            />\n        );\n    };\n\n    renderError({ error, touched }) {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">\n                        {error}\n                    </div>\n                </div>\n            );\n        }\n    }\n    renderInput = ({ input, label, meta, type }) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`\n        return (\n            <div className=\"field\">\n                <label className={className}>\n                    {label}\n                    <input {...input} autoComplete=\"off\" type={type} />\n                    {this.renderError(meta)}\n                </label>\n            </div>\n        );\n    }\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\" encType=\"multipart/form-data\">\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" type=\"text\" />\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" type=\"text\" />\n                <Field name=\"attachment\" component={this.FileInput} type=\"file\" />\n                <img src={this.state.file}/>\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n    if (!formValues.title) {\n        errors.title = 'You must enter a title';\n    }\n\n    if (!formValues.constent) {\n        errors.constent = 'You must enter a constent';\n    }\n\n    return errors;\n};\n\nexport default reduxForm({\n    form: 'postForm',\n    validate\n})(PostForm);"]},"metadata":{},"sourceType":"module"}