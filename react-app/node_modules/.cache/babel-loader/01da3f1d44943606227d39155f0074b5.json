{"ast":null,"code":"import _defineProperty from \"/home/laura/Documents/brr-27-capacitacion-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport FormData from 'form-data';\nimport backendApi from '../apis/backendApi';\nimport { LOGIN, SIGNIN, FETCH_POSTS, LOGOUT, ADD_POST, EDIT_POST, DELETE_POST } from './actionTypes';\nimport history from '../history';\nexport const fetchPosts = () => async dispatch => {\n  const response = await backendApi.get('/posts').catch(error => {\n    history.push(\"/error\");\n  });\n  dispatch({\n    type: FETCH_POSTS,\n    payload: response.data.posts\n  });\n};\nexport const createPost = formValues => async (dispatch, getState) => {\n  const postData = getPostData(formValues);\n  const response = await backendApi.post('/posts', postData, {\n    headers: {\n      'Authorization': \"Bearer \".concat(getState().user.token)\n    }\n  }).catch(error => {\n    history.push(\"/error\");\n  });\n  dispatch({\n    type: ADD_POST,\n    payload: response.data.post._doc\n  });\n  history.push('/');\n};\nexport const editPost = (id, formValues) => async (dispatch, getState) => {\n  let postData;\n\n  if (typeof formValues.postImage === 'object') {\n    postData = getPostData(formValues);\n    postData.append('id', id);\n  } else {\n    postData = {\n      id: id,\n      postTitle: formValues.postTitle,\n      postContent: formValues.postContent,\n      imagePath: formValues.postImage,\n      userId: null\n    };\n  }\n\n  const response = await backendApi.put(\"/posts/\".concat(id), postData, {\n    headers: {\n      'Authorization': \"Bearer \".concat(getState().user.token)\n    }\n  });\n  dispatch({\n    type: EDIT_POST,\n    payload: response.data.post\n  });\n  history.push('/');\n};\nexport const loginUser = formValues => async dispatch => {\n  const now = new Date();\n  const response = await backendApi.post(\"/user/login\", _objectSpread({}, formValues));\n  const authData = {\n    token: response.data.token,\n    expirationDate: new Date(now.getTime() + response.data.expiresIn * 1000),\n    userId: response.data.userId\n  };\n  dispatch({\n    type: LOGIN,\n    payload: authData\n  });\n  history.push('/');\n};\nexport const logOut = () => {\n  return {\n    type: LOGOUT,\n    payload: null\n  };\n};\nexport const signUp = ({\n  email,\n  password\n}) => async dispatch => {\n  await backendApi.post('user/singup', {\n    email,\n    password\n  });\n  history.push('/login');\n  dispatch({\n    type: SIGNIN\n  });\n};\n\nconst getPostData = formValues => {\n  const postData = new FormData();\n  postData.append('postTitle', formValues.postTitle);\n  postData.append('postContent', formValues.postContent);\n  /**\n   * the three paramas is for axios to parse the image to a binary\n   */\n\n  postData.append('action', 'ADD');\n  postData.append('param', 0);\n  postData.append('secondParam', 0);\n  postData.append('postImage', formValues.postImage, formValues.postTitle);\n  return postData;\n};\n\nexport const deletePost = id => async (dispatch, getState) => {\n  await backendApi.delete(\"/posts/\".concat(id), {\n    headers: {\n      'Authorization': \"Bearer \".concat(getState().user.token)\n    }\n  });\n  dispatch({\n    type: DELETE_POST,\n    payload: id\n  });\n  history.push('/');\n};","map":{"version":3,"sources":["/home/laura/Documents/brr-27-capacitacion-reactjs/src/actions/index.js"],"names":["FormData","backendApi","LOGIN","SIGNIN","FETCH_POSTS","LOGOUT","ADD_POST","EDIT_POST","DELETE_POST","history","fetchPosts","dispatch","response","get","catch","error","push","type","payload","data","posts","createPost","formValues","getState","postData","getPostData","post","headers","user","token","_doc","editPost","id","postImage","append","postTitle","postContent","imagePath","userId","put","loginUser","now","Date","authData","expirationDate","getTime","expiresIn","logOut","signUp","email","password","deletePost","delete"],"mappings":"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","sourcesContent":["import FormData from 'form-data';\nimport backendApi from '../apis/backendApi';\nimport { LOGIN, SIGNIN, FETCH_POSTS, LOGOUT, ADD_POST, EDIT_POST, DELETE_POST } from './actionTypes';\nimport history from '../history';\n\nexport const fetchPosts = () => async dispatch => {\n\n    const response = await backendApi.get('/posts').catch(error => {history.push(\"/error\")});\n    dispatch({ type: FETCH_POSTS, payload: response.data.posts })\n};\n\nexport const createPost = (formValues) => async (dispatch, getState) => {\n    const postData = getPostData(formValues);\n\n    const response = await backendApi.post('/posts', \n        postData, \n        { headers: { 'Authorization': `Bearer ${getState().user.token}` } })\n            .catch(error => {history.push(\"/error\")});\n    dispatch({ type: ADD_POST, payload: response.data.post._doc });\n\n    history.push('/');\n}\n\nexport const editPost = (id, formValues) => async (dispatch, getState) => {\n    let postData;\n    if (typeof (formValues.postImage) === 'object') {\n        postData = getPostData(formValues);\n        postData.append('id', id);\n    } else {\n        postData = {\n            id: id,\n            postTitle: formValues.postTitle,\n            postContent: formValues.postContent,\n            imagePath: formValues.postImage,\n            userId: null\n        };\n    }\n    const response = await backendApi.put(`/posts/${id}`, postData, { headers: { 'Authorization': `Bearer ${getState().user.token}` } });\n    dispatch({ type: EDIT_POST, payload: response.data.post });\n\n    history.push('/');\n}\n\nexport const loginUser = formValues => async dispatch => {\n    const now = new Date();\n    const response = await backendApi.post(`/user/login`, { ...formValues });\n    const authData = {\n        token: response.data.token,\n        expirationDate: new Date(now.getTime() + response.data.expiresIn * 1000),\n        userId: response.data.userId\n    }\n    dispatch({ type: LOGIN, payload: authData });\n\n    history.push('/');\n};\n\nexport const logOut = () => {\n    return { type: LOGOUT, payload: null };\n}\n\nexport const signUp = ({email, password}) => async dispatch => {\n    await backendApi.post('user/singup', {\n        email, password\n    });\n    history.push('/login');\n\n    dispatch({ type: SIGNIN });\n}\n\nconst getPostData = (formValues) => {\n    const postData = new FormData();\n    postData.append('postTitle', formValues.postTitle);\n    postData.append('postContent', formValues.postContent);\n    /**\n     * the three paramas is for axios to parse the image to a binary\n     */\n    postData.append('action', 'ADD');\n    postData.append('param', 0);\n    postData.append('secondParam', 0);\n    postData.append('postImage', formValues.postImage, formValues.postTitle);\n    return postData;\n}\n\nexport const deletePost = id => async (dispatch, getState) => {\n    await backendApi.delete(`/posts/${id}`, { headers: { 'Authorization': `Bearer ${getState().user.token}` } });\n    dispatch({ type: DELETE_POST, payload: id });\n    history.push('/');\n}"]},"metadata":{},"sourceType":"module"}